===================
Concurrent Greeting
===================

fun do_greet() -> Int {
  print("Hello, concurrent world!")
  return 17
}

fun prime_number() -> Int {
  13
}

fun concurrent_greeting() -> Int {
  var future = spawn_(fun() { do_greet() })
  let x = prime_number()
  print("Main threads says: hello!")
  print("# before await")
  let y = future.await() // switching threads
  print("# after await")
  return x + y
}

public fun main() {
  print("Starting...")
  print(concurrent_greeting())
  print("Finishing...")
}

// Compile this with:
// > hc concurrent_greeting.hylo -l concore2full -l context_core_api -l boost_context -l c++ -L <path-to-concore2full> -L <path-to-boost>

---

(source_file
  (function_decl
    (function_head
      (function_name
        (identifier)))
    (function_signature
      (name_type_expr
        (selector
          (identifier_expr
            (identifier)))))
    (brace_stmt
      (stmt
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier))))
          (call_argument
            (string_literal
              (simple_string)))))
      (stmt
        (jump_stmt
          (integer_literal
            (decimal_literal))))))
  (function_decl
    (function_head
      (function_name
        (identifier)))
    (function_signature
      (name_type_expr
        (selector
          (identifier_expr
            (identifier)))))
    (brace_stmt
      (stmt
        (integer_literal
          (decimal_literal)))))
  (function_decl
    (function_head
      (function_name
        (identifier)))
    (function_signature
      (name_type_expr
        (selector
          (identifier_expr
            (identifier)))))
    (brace_stmt
      (stmt
        (binding_decl
          (binding_pattern
            (binding_introducer)
            (identifier))
          (function_call_expr
            (selector_expr
              (selector
                (identifier_expr
                  (identifier))))
            (call_argument
              (lambda_expr
                (function_signature)
                (brace_stmt
                  (stmt
                    (function_call_expr
                      (selector_expr
                        (selector
                          (identifier_expr
                            (identifier))))))))))))
      (stmt
        (binding_decl
          (binding_pattern
            (binding_introducer)
            (identifier))
          (function_call_expr
            (selector_expr
              (selector
                (identifier_expr
                  (identifier)))))))
      (stmt
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier))))
          (call_argument
            (string_literal
              (simple_string)))))
      (stmt
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier))))
          (call_argument
            (string_literal
              (simple_string)))))
      (stmt
        (binding_decl
          (binding_pattern
            (binding_introducer)
            (identifier))
          (function_call_expr
            (value_member_expr
              (selector_expr
                (selector
                  (identifier_expr
                    (identifier))))
              (selector
                (identifier_expr
                  (identifier)))))))
      (single_line_comment)
      (stmt
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier))))
          (call_argument
            (string_literal
              (simple_string)))))
      (stmt
        (jump_stmt
          (infix_expr
            (selector_expr
              (selector
                (identifier_expr
                  (identifier))))
            (infix_operator_tail
              (infix_operator)
              (selector_expr
                (selector
                  (identifier_expr
                    (identifier))))))))))
  (function_decl
    (function_head
      (access_modifier)
      (function_name
        (identifier)))
    (function_signature)
    (brace_stmt
      (stmt
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier))))
          (call_argument
            (string_literal
              (simple_string)))))
      (stmt
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier))))
          (call_argument
            (function_call_expr
              (selector_expr
                (selector
                  (identifier_expr
                    (identifier))))))))
      (stmt
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier))))
          (call_argument
            (string_literal
              (simple_string)))))))
  (single_line_comment)
  (single_line_comment))
