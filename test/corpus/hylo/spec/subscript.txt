===========
Subscript Example
===========

subscript min<T, E>(_ a: T, _ b: T, by comparator: [E](T, T) -> Bool): Int {
  let   { yield if comparator(a, b) { a } else { b } }
  inout { yield &(if comparator(a, b) { a } else { b }) }
  sink  { return if comparator(a, b) { a } else { b } }
  set   { if comparator(a, b) { a = new_value } else { b = new_value } }
}

---

(source_file
  (subscript_decl
    (subscript_head
      (identifier)
      (generic_clause
        (generic_type_parameter
          (identifier))
        (generic_type_parameter
          (identifier))))
    (subscript_signature
      (parameter_decl
        (identifier)
        (name_type_expr
          (selector
            (identifier_expr
              (identifier)))))
      (parameter_decl
        (identifier)
        (name_type_expr
          (selector
            (identifier_expr
              (identifier)))))
      (parameter_decl
        (identifier)
        (identifier)
        (lambda_type_expr
          (lambda_environment
            (name_type_expr
              (selector
                (identifier_expr
                  (identifier)))))
          (lambda_parameter
            (name_type_expr
              (selector
                (identifier_expr
                  (identifier)))))
          (lambda_parameter
            (name_type_expr
              (selector
                (identifier_expr
                  (identifier)))))
          (name_type_expr
            (selector
              (identifier_expr
                (identifier))))))
      (name_type_expr
        (selector
          (identifier_expr
            (identifier)))))
    (subscript_body
      (subscript_impl
        (subscript_introducer)
        (brace_stmt
          (stmt
            (jump_stmt
              (conditional_expr
                (conditional_clause_item
                  (function_call_expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier))))
                    (call_argument
                      (value_member_expr
                        (selector
                          (identifier_expr
                            (identifier)))))
                    (call_argument
                      (value_member_expr
                        (selector
                          (identifier_expr
                            (identifier)))))))
                (brace_stmt
                  (stmt
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier))))))
                (brace_stmt
                  (stmt
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier)))))))))))
      (subscript_impl
        (subscript_introducer)
        (brace_stmt
          (stmt
            (jump_stmt
              (inout_expr
                (tuple_expr
                  (tuple_expr_element
                    (conditional_expr
                      (conditional_clause_item
                        (function_call_expr
                          (value_member_expr
                            (selector
                              (identifier_expr
                                (identifier))))
                          (call_argument
                            (value_member_expr
                              (selector
                                (identifier_expr
                                  (identifier)))))
                          (call_argument
                            (value_member_expr
                              (selector
                                (identifier_expr
                                  (identifier)))))))
                      (brace_stmt
                        (stmt
                          (value_member_expr
                            (selector
                              (identifier_expr
                                (identifier))))))
                      (brace_stmt
                        (stmt
                          (value_member_expr
                            (selector
                              (identifier_expr
                                (identifier))))))))))))))
      (subscript_impl
        (subscript_introducer)
        (brace_stmt
          (stmt
            (jump_stmt
              (conditional_expr
                (conditional_clause_item
                  (function_call_expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier))))
                    (call_argument
                      (value_member_expr
                        (selector
                          (identifier_expr
                            (identifier)))))
                    (call_argument
                      (value_member_expr
                        (selector
                          (identifier_expr
                            (identifier)))))))
                (brace_stmt
                  (stmt
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier))))))
                (brace_stmt
                  (stmt
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier)))))))))))
      (subscript_impl
        (subscript_introducer)
        (brace_stmt
          (stmt
            (conditional_expr
              (conditional_clause_item
                (function_call_expr
                  (value_member_expr
                    (selector
                      (identifier_expr
                        (identifier))))
                  (call_argument
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier)))))
                  (call_argument
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier)))))))
              (brace_stmt
                (stmt
                  (assignment_expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier))))
                    (assignment_operator)
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier)))))))
              (brace_stmt
                (stmt
                  (assignment_expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier))))
                    (assignment_operator)
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier))))))))))))))
