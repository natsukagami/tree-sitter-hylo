===========
Subscript Example
===========

subscript min<T, E>(_ a: T, _ b: T, by comparator: [E](T, T) -> Bool): Int {
  let   { yield if comparator(a, b) { a } else { b } }
  inout { yield &(if comparator(a, b) { a } else { b }) }
  sink  { return if comparator(a, b) { a } else { b } }
  set   { if comparator(a, b) { a = new_value } else { b = new_value } }
}

---

(source_file
  (subscript_decl
    (subscript_head
      (identifier)
      (generic_clause
        (generic_type_parameter
          (identifier))
        (generic_type_parameter
          (identifier))))
    (subscript_signature
      (parameter_decl
        (identifier)
        (type_expr
          (name_type_expr
            (identifier))))
      (parameter_decl
        (identifier)
        (type_expr
          (name_type_expr
            (identifier))))
      (parameter_decl
        (identifier)
        (identifier)
        (type_expr
          (lambda_type_expr
            (lambda_environment
              (type_expr
                (name_type_expr
                  (identifier))))
            (lambda_parameter
              (type_expr
                (name_type_expr
                  (identifier))))
            (lambda_parameter
              (type_expr
                (name_type_expr
                  (identifier))))
            (type_expr
              (name_type_expr
                (identifier))))))
      (type_expr
        (name_type_expr
          (identifier))))
    (subscript_body
      (subscript_impl
        (brace_stmt
          (stmt
            (jump_stmt
              (expr
                (conditional_expr
                  (conditional_clause_item
                    (expr
                      (function_call_expr
                        (primary_decl_ref
                          (identifier_expr
                            (identifier)))
                        (call_argument
                          (expr
                            (primary_decl_ref
                              (identifier_expr
                                (identifier)))))
                        (call_argument
                          (expr
                            (primary_decl_ref
                              (identifier_expr
                                (identifier))))))))
                  (brace_stmt
                    (stmt
                      (expr
                        (primary_decl_ref
                          (identifier_expr
                            (identifier))))))
                  (brace_stmt
                    (stmt
                      (expr
                        (primary_decl_ref
                          (identifier_expr
                            (identifier))))))))))))
      (subscript_impl
        (brace_stmt
          (stmt
            (jump_stmt
              (expr
                (inout_expr
                  (expr
                    (tuple_expr
                      (tuple_expr_element
                        (expr
                          (conditional_expr
                            (conditional_clause_item
                              (expr
                                (function_call_expr
                                  (primary_decl_ref
                                    (identifier_expr
                                      (identifier)))
                                  (call_argument
                                    (expr
                                      (primary_decl_ref
                                        (identifier_expr
                                          (identifier)))))
                                  (call_argument
                                    (expr
                                      (primary_decl_ref
                                        (identifier_expr
                                          (identifier))))))))
                            (brace_stmt
                              (stmt
                                (expr
                                  (primary_decl_ref
                                    (identifier_expr
                                      (identifier))))))
                            (brace_stmt
                              (stmt
                                (expr
                                  (primary_decl_ref
                                    (identifier_expr
                                      (identifier)))))))))))))))))
      (subscript_impl
        (brace_stmt
          (stmt
            (jump_stmt
              (expr
                (conditional_expr
                  (conditional_clause_item
                    (expr
                      (function_call_expr
                        (primary_decl_ref
                          (identifier_expr
                            (identifier)))
                        (call_argument
                          (expr
                            (primary_decl_ref
                              (identifier_expr
                                (identifier)))))
                        (call_argument
                          (expr
                            (primary_decl_ref
                              (identifier_expr
                                (identifier))))))))
                  (brace_stmt
                    (stmt
                      (expr
                        (primary_decl_ref
                          (identifier_expr
                            (identifier))))))
                  (brace_stmt
                    (stmt
                      (expr
                        (primary_decl_ref
                          (identifier_expr
                            (identifier))))))))))))
      (subscript_impl
        (brace_stmt
          (stmt
            (expr
              (conditional_expr
                (conditional_clause_item
                  (expr
                    (function_call_expr
                      (primary_decl_ref
                        (identifier_expr
                          (identifier)))
                      (call_argument
                        (expr
                          (primary_decl_ref
                            (identifier_expr
                              (identifier)))))
                      (call_argument
                        (expr
                          (primary_decl_ref
                            (identifier_expr
                              (identifier))))))))
                (brace_stmt
                  (stmt
                    (expr
                      (primary_decl_ref
                        (identifier_expr
                          (identifier)))
                      (infix_operator_tail
                        (infix_operator)
                        (primary_decl_ref
                          (identifier_expr
                            (identifier)))))))
                (brace_stmt
                  (stmt
                    (expr
                      (primary_decl_ref
                        (identifier_expr
                          (identifier)))
                      (infix_operator_tail
                        (infix_operator)
                        (primary_decl_ref
                          (identifier_expr
                            (identifier)))))))))))))))
