================
ConditionalExpr
================

//- parse expecting: success

public fun main() {
  _ = if a { () } else { () }
  _ = if a {
    ()
  } else if b == c {
    ()
  } else { () }

  _ = if let x = f(), a(x) == c {
    ()
  } else { () }
}

---

(source_file
  (single_line_comment)
  (function_decl
    (function_head
      (access_modifier)
      (function_name
        (identifier)))
    (function_signature)
    (brace_stmt
      (stmt
        (discard_stmt
          (expr
            (conditional_expr
              (conditional_clause_item
                (expr
                  (value_member_expr
                    (selector
                      (identifier_expr
                        (identifier))))))
              (brace_stmt
                (stmt
                  (expr
                    (tuple_expr))))
              (brace_stmt
                (stmt
                  (expr
                    (tuple_expr))))))))
      (stmt
        (discard_stmt
          (expr
            (conditional_expr
              (conditional_clause_item
                (expr
                  (value_member_expr
                    (selector
                      (identifier_expr
                        (identifier))))))
              (brace_stmt
                (stmt
                  (expr
                    (tuple_expr))))
              (conditional_expr
                (conditional_clause_item
                  (expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier))))
                    (infix_operator_tail
                      (infix_operator)
                      (value_member_expr
                        (selector
                          (identifier_expr
                            (identifier)))))))
                (brace_stmt
                  (stmt
                    (expr
                      (tuple_expr))))
                (brace_stmt
                  (stmt
                    (expr
                      (tuple_expr)))))))))
      (stmt
        (discard_stmt
          (expr
            (conditional_expr
              (conditional_clause_item
                (binding_pattern
                  (binding_introducer)
                  (identifier))
                (expr
                  (function_call_expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier)))))))
              (conditional_clause_item
                (expr
                  (function_call_expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier))))
                    (call_argument
                      (expr
                        (value_member_expr
                          (selector
                            (identifier_expr
                              (identifier)))))))
                  (infix_operator_tail
                    (infix_operator)
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier)))))))
              (brace_stmt
                (stmt
                  (expr
                    (tuple_expr))))
              (brace_stmt
                (stmt
                  (expr
                    (tuple_expr)))))))))))
