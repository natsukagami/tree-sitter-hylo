================
ConditionalExpr
================

//- parse expecting: success

public fun main() {
  _ = if a { () } else { () }
  _ = if a {
    ()
  } else if b == c {
    ()
  } else { () }

  _ = if let x = f(), a(x) == c {
    ()
  } else { () }
}

---

(source_file
  (single_line_comment)
  (function_decl
    (function_head
      (access_modifier)
      (function_name
        (identifier)))
    (function_signature)
    (brace_stmt
      (stmt
        (discard_stmt
          (conditional_expr
            (conditional_clause_item
              (selector_expr
                (selector
                  (identifier_expr
                    (identifier)))))
            (brace_stmt
              (stmt
                (tuple_expr)))
            (brace_stmt
              (stmt
                (tuple_expr))))))
      (stmt
        (discard_stmt
          (conditional_expr
            (conditional_clause_item
              (selector_expr
                (selector
                  (identifier_expr
                    (identifier)))))
            (brace_stmt
              (stmt
                (tuple_expr)))
            (conditional_expr
              (conditional_clause_item
                (infix_expr
                  (selector_expr
                    (selector
                      (identifier_expr
                        (identifier))))
                  (infix_operator_tail
                    (infix_operator)
                    (selector_expr
                      (selector
                        (identifier_expr
                          (identifier)))))))
              (brace_stmt
                (stmt
                  (tuple_expr)))
              (brace_stmt
                (stmt
                  (tuple_expr)))))))
      (stmt
        (discard_stmt
          (conditional_expr
            (conditional_clause_item
              (binding_pattern
                (binding_introducer)
                (identifier))
              (function_call_expr
                (selector_expr
                  (selector
                    (identifier_expr
                      (identifier))))))
            (conditional_clause_item
              (infix_expr
                (function_call_expr
                  (selector_expr
                    (selector
                      (identifier_expr
                        (identifier))))
                  (call_argument
                    (selector_expr
                      (selector
                        (identifier_expr
                          (identifier))))))
                (infix_operator_tail
                  (infix_operator)
                  (selector_expr
                    (selector
                      (identifier_expr
                        (identifier)))))))
            (brace_stmt
              (stmt
                (tuple_expr)))
            (brace_stmt
              (stmt
                (tuple_expr)))))))))
