===============
DefaultArgument
===============

//- typeCheck expecting: failure

type A { public memberwise init }

type B { public memberwise init }

type C: Deinitializable {
  public init(a: A = A()) {}
  public fun foo(a: A = A()) {
    let {}
  }
}

fun f0(a: A, b: B = B()) {}

fun f1(a: A = A(), b: B) {}

//! @+1 diagnostic cannot pass value of type 'Bool' to parameter 'let B'
fun g0(a: A, b: B = true) {}

public fun main() {
  f0(a: A())
  //! @+1 diagnostic incompatible labels: found '(b:)', expected '(a:b:)'
  f0(b: B())
  //! @+1 diagnostic incompatible labels: found '(a:_:)', expected '(a:b:)'
  f0(a: A(), B())

  f1(b: B())
  //! @+1 diagnostic incompatible labels: found '(a:)', expected '(a:b:)'
  f1(a: A())

  let x = C()
  _ = x.foo()
}

---

(source_file
  (single_line_comment)
  (product_type_decl
    (product_type_head
      (identifier))
    (function_memberwise_init
      (access_modifier)))
  (product_type_decl
    (product_type_head
      (identifier))
    (function_memberwise_init
      (access_modifier)))
  (product_type_decl
    (product_type_head
      (identifier)
      (conformance_list
        (name_type_expr
          (selector
            (identifier_expr
              (identifier))))))
    (function_decl
      (function_head
        (access_modifier)
        (function_name))
      (function_signature
        (parameter_decl
          (identifier)
          (name_type_expr
            (selector
              (identifier_expr
                (identifier))))
          (function_call_expr
            (selector_expr
              (selector
                (identifier_expr
                  (identifier)))))))
      (brace_stmt))
    (function_decl
      (function_head
        (access_modifier)
        (function_name
          (identifier)))
      (function_signature
        (parameter_decl
          (identifier)
          (name_type_expr
            (selector
              (identifier_expr
                (identifier))))
          (function_call_expr
            (selector_expr
              (selector
                (identifier_expr
                  (identifier)))))))
      (method_bundle_body
        (method_impl
          (method_introducer)
          (brace_stmt)))))
  (function_decl
    (function_head
      (function_name
        (identifier)))
    (function_signature
      (parameter_decl
        (identifier)
        (name_type_expr
          (selector
            (identifier_expr
              (identifier)))))
      (parameter_decl
        (identifier)
        (name_type_expr
          (selector
            (identifier_expr
              (identifier))))
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier)))))))
    (brace_stmt))
  (function_decl
    (function_head
      (function_name
        (identifier)))
    (function_signature
      (parameter_decl
        (identifier)
        (name_type_expr
          (selector
            (identifier_expr
              (identifier))))
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier))))))
      (parameter_decl
        (identifier)
        (name_type_expr
          (selector
            (identifier_expr
              (identifier))))))
    (brace_stmt))
  (single_line_comment)
  (function_decl
    (function_head
      (function_name
        (identifier)))
    (function_signature
      (parameter_decl
        (identifier)
        (name_type_expr
          (selector
            (identifier_expr
              (identifier)))))
      (parameter_decl
        (identifier)
        (name_type_expr
          (selector
            (identifier_expr
              (identifier))))
        (boolean_literal)))
    (brace_stmt))
  (function_decl
    (function_head
      (access_modifier)
      (function_name
        (identifier)))
    (function_signature)
    (brace_stmt
      (stmt
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier))))
          (call_argument
            (identifier)
            (function_call_expr
              (selector_expr
                (selector
                  (identifier_expr
                    (identifier))))))))
      (single_line_comment)
      (stmt
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier))))
          (call_argument
            (identifier)
            (function_call_expr
              (selector_expr
                (selector
                  (identifier_expr
                    (identifier))))))))
      (single_line_comment)
      (stmt
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier))))
          (call_argument
            (identifier)
            (function_call_expr
              (selector_expr
                (selector
                  (identifier_expr
                    (identifier))))))
          (call_argument
            (function_call_expr
              (selector_expr
                (selector
                  (identifier_expr
                    (identifier))))))))
      (stmt
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier))))
          (call_argument
            (identifier)
            (function_call_expr
              (selector_expr
                (selector
                  (identifier_expr
                    (identifier))))))))
      (single_line_comment)
      (stmt
        (function_call_expr
          (selector_expr
            (selector
              (identifier_expr
                (identifier))))
          (call_argument
            (identifier)
            (function_call_expr
              (selector_expr
                (selector
                  (identifier_expr
                    (identifier))))))))
      (stmt
        (binding_decl
          (binding_pattern
            (binding_introducer)
            (identifier))
          (function_call_expr
            (selector_expr
              (selector
                (identifier_expr
                  (identifier)))))))
      (stmt
        (discard_stmt
          (function_call_expr
            (value_member_expr
              (selector_expr
                (selector
                  (identifier_expr
                    (identifier))))
              (selector
                (identifier_expr
                  (identifier))))))))))
