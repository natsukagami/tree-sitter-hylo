=============
Destructuring
=============

//- typeCheck expecting: failure

fun check<T>(_ x: T) {}

public fun main() {
  let (x0, y0) = (1, 2)
  check<Int>(x0)
  check<Int>(y0)
  
  //! @+1 diagnostic invalid destructuring of type 'Int'
  let (x1, y1): Int
  
  //! @+1 diagnostic invalid destructuring of type '{Int,}'
  let (x2, y2): {Int,}
  
  //! @+1 diagnostic incompatible types '{Int,}' and '{_, _}'
  let (x3, y3) = (1,)
}

---

(source_file
  (single_line_comment)
  (function_decl
    (function_head
      (function_name
        (identifier))
      (generic_clause
        (generic_type_parameter
          (identifier))))
    (function_signature
      (parameter_decl
        (identifier)
        (name_type_expr
          (selector
            (identifier_expr
              (identifier))))))
    (brace_stmt))
  (function_decl
    (function_head
      (access_modifier)
      (function_name
        (identifier)))
    (function_signature)
    (brace_stmt
      (stmt
        (binding_decl
          (binding_pattern
            (binding_introducer)
            (tuple_pattern
              (tuple_pattern_element
                (expr_pattern
                  (expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier)))))))
              (tuple_pattern_element
                (expr_pattern
                  (expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier)))))))))
          (expr
            (tuple_expr
              (tuple_expr_element
                (expr
                  (integer_literal
                    (decimal_literal))))
              (tuple_expr_element
                (expr
                  (integer_literal
                    (decimal_literal))))))))
      (stmt
        (expr
          (function_call_expr
            (value_member_expr
              (selector
                (identifier_expr
                  (identifier))
                (static_argument_list
                  (static_argument
                    (name_type_expr
                      (selector
                        (identifier_expr
                          (identifier))))))))
            (call_argument
              (expr
                (value_member_expr
                  (selector
                    (identifier_expr
                      (identifier)))))))))
      (stmt
        (expr
          (function_call_expr
            (value_member_expr
              (selector
                (identifier_expr
                  (identifier))
                (static_argument_list
                  (static_argument
                    (name_type_expr
                      (selector
                        (identifier_expr
                          (identifier))))))))
            (call_argument
              (expr
                (value_member_expr
                  (selector
                    (identifier_expr
                      (identifier)))))))))
      (single_line_comment)
      (stmt
        (binding_decl
          (binding_pattern
            (binding_introducer)
            (tuple_pattern
              (tuple_pattern_element
                (expr_pattern
                  (expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier)))))))
              (tuple_pattern_element
                (expr_pattern
                  (expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier))))))))
            (name_type_expr
              (selector
                (identifier_expr
                  (identifier)))))))
      (single_line_comment)
      (stmt
        (binding_decl
          (binding_pattern
            (binding_introducer)
            (tuple_pattern
              (tuple_pattern_element
                (expr_pattern
                  (expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier)))))))
              (tuple_pattern_element
                (expr_pattern
                  (expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier))))))))
            (tuple_type_expr
              (tuple_type_element
                (name_type_expr
                  (selector
                    (identifier_expr
                      (identifier)))))))))
      (single_line_comment)
      (stmt
        (binding_decl
          (binding_pattern
            (binding_introducer)
            (tuple_pattern
              (tuple_pattern_element
                (expr_pattern
                  (expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier)))))))
              (tuple_pattern_element
                (expr_pattern
                  (expr
                    (value_member_expr
                      (selector
                        (identifier_expr
                          (identifier)))))))))
          (expr
            (tuple_expr
              (tuple_expr_element
                (expr
                  (integer_literal
                    (decimal_literal)))))))))))
