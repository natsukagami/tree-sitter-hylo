===============================
AssociatedTypesWithConformances
===============================

//- typeCheck expecting: success

trait P { type Z }
trait Q { type Y }
trait R { type X: Q }
trait S { type W: R where W.X: P }

type A<T: S> {
  typealias B = T.W.X.Y
  typealias C = T.W.X.Z
}

---

(source_file
  (single_line_comment)
  (trait_decl
    (trait_head
      (identifier))
    (associated_type_decl
      (identifier)))
  (trait_decl
    (trait_head
      (identifier))
    (associated_type_decl
      (identifier)))
  (trait_decl
    (trait_head
      (identifier))
    (associated_type_decl
      (identifier)
      (conformance_list
        (name_type_expr
          (selector
            (identifier_expr
              (identifier)))))))
  (trait_decl
    (trait_head
      (identifier))
    (associated_type_decl
      (identifier)
      (conformance_list
        (name_type_expr
          (selector
            (identifier_expr
              (identifier)))))
      (where_clause
        (conformance_constraint
          (name_type_expr
            (selector
              (identifier_expr
                (identifier)))
            (selector
              (identifier_expr
                (identifier))))
          (trait_composition
            (name_type_expr
              (selector
                (identifier_expr
                  (identifier)))))))))
  (product_type_decl
    (product_type_head
      (identifier)
      (generic_clause
        (generic_type_parameter
          (identifier)
          (trait_composition
            (name_type_expr
              (selector
                (identifier_expr
                  (identifier))))))))
    (type_alias_decl
      (type_alias_head
        (identifier))
      (name_type_expr
        (selector
          (identifier_expr
            (identifier)))
        (selector
          (identifier_expr
            (identifier)))
        (selector
          (identifier_expr
            (identifier)))
        (selector
          (identifier_expr
            (identifier)))))
    (type_alias_decl
      (type_alias_head
        (identifier))
      (name_type_expr
        (selector
          (identifier_expr
            (identifier)))
        (selector
          (identifier_expr
            (identifier)))
        (selector
          (identifier_expr
            (identifier)))
        (selector
          (identifier_expr
            (identifier)))))))
