===
For
===

//- typeCheck expecting: failure

type Counter: Iterator, Deinitializable {
  public var n: Int
  public memberwise init
  public typealias Element = Int
  public fun next() inout -> Optional<Int> {
    (n.copy(), &n += 1).0 as _
  }
}

fun check<T>(_ x: T) {}

public fun main() {
  let a = CollectionOfOne<Optional<Int>>(0)

  // Non-consuming for-loop.
  for let x in a {
    check<Optional<Int>>(x)
  }

  // Non-consuming for-loop with narrowing pattern.
  for let x: Int in a {
    check<Int>(x)
  }

  // Non-consuming for loop with a filter.
  for let x: Int in a where x > 0 {
    check<Int>(x)
  }

  // Non-consuming for-loop using an iterator.
  for let x in Counter(n: 0) {
    check<Int>(x)
  }

  // Consuming for-loop.
  for sink let _ in Counter(n: 0) {}

  //! @+1 diagnostic non-consuming for loop requires 'Bool' to conform to 'Collection' or 'Iterator'
  for let _ in true {}

  //! @+1 diagnostic consuming for loop requires 'CollectionOfOne<Optional<Int>>' to conform to 'Iterator'
  for sink let _ in a {}

  //! @+1 diagnostic incompatible types 'Bool' and '{}'
  for let _ in a where () {}
}

---

(source_file
  (single_line_comment)
  (product_type_decl
    (product_type_head
      (identifier)
      (conformance_list
        (name_type_expr
          (selector
            (identifier_expr
              (identifier))))
        (name_type_expr
          (selector
            (identifier_expr
              (identifier))))))
    (binding_decl
      (access_modifier)
      (binding_pattern
        (binding_introducer)
        (identifier)
        (name_type_expr
          (selector
            (identifier_expr
              (identifier))))))
    (function_memberwise_init
      (access_modifier))
    (type_alias_decl
      (type_alias_head
        (access_modifier)
        (identifier))
      (name_type_expr
        (selector
          (identifier_expr
            (identifier)))))
    (function_decl
      (function_head
        (access_modifier)
        (function_name
          (identifier)))
      (function_signature
        (receiver_effect)
        (name_type_expr
          (selector
            (identifier_expr
              (identifier))
            (static_argument_list
              (static_argument
                (name_type_expr
                  (selector
                    (identifier_expr
                      (identifier)))))))))
      (brace_stmt
        (stmt
          (infix_expr
            (value_index_expr
              (tuple_expr
                (tuple_expr_element
                  (function_call_expr
                    (value_member_expr
                      (value_member_expr
                        (selector
                          (identifier_expr
                            (identifier))))
                      (selector
                        (identifier_expr
                          (identifier))))))
                (tuple_expr_element
                  (assignment_expr
                    (inout_expr
                      (value_member_expr
                        (selector
                          (identifier_expr
                            (identifier)))))
                    (assignment_operator)
                    (integer_literal
                      (decimal_literal)))))
              (value_member_index))
            (type_casting_tail
              (wildcard_type_expr)))))))
  (function_decl
    (function_head
      (function_name
        (identifier))
      (generic_clause
        (generic_type_parameter
          (identifier))))
    (function_signature
      (parameter_decl
        (identifier)
        (name_type_expr
          (selector
            (identifier_expr
              (identifier))))))
    (brace_stmt))
  (function_decl
    (function_head
      (access_modifier)
      (function_name
        (identifier)))
    (function_signature)
    (brace_stmt
      (stmt
        (binding_decl
          (binding_pattern
            (binding_introducer)
            (identifier))
          (function_call_expr
            (value_member_expr
              (selector
                (identifier_expr
                  (identifier))
                (static_argument_list
                  (static_argument
                    (name_type_expr
                      (selector
                        (identifier_expr
                          (identifier))
                        (static_argument_list
                          (static_argument
                            (name_type_expr
                              (selector
                                (identifier_expr
                                  (identifier))))))))))))
            (call_argument
              (integer_literal
                (decimal_literal))))))
      (single_line_comment)
      (stmt
        (for_stmt
          (binding_decl
            (binding_pattern
              (binding_introducer)
              (identifier)))
          (value_member_expr
            (selector
              (identifier_expr
                (identifier))))
          (brace_stmt
            (stmt
              (function_call_expr
                (value_member_expr
                  (selector
                    (identifier_expr
                      (identifier))
                    (static_argument_list
                      (static_argument
                        (name_type_expr
                          (selector
                            (identifier_expr
                              (identifier))
                            (static_argument_list
                              (static_argument
                                (name_type_expr
                                  (selector
                                    (identifier_expr
                                      (identifier))))))))))))
                (call_argument
                  (value_member_expr
                    (selector
                      (identifier_expr
                        (identifier))))))))))
      (single_line_comment)
      (stmt
        (for_stmt
          (binding_decl
            (binding_pattern
              (binding_introducer)
              (identifier)
              (name_type_expr
                (selector
                  (identifier_expr
                    (identifier))))))
          (value_member_expr
            (selector
              (identifier_expr
                (identifier))))
          (brace_stmt
            (stmt
              (function_call_expr
                (value_member_expr
                  (selector
                    (identifier_expr
                      (identifier))
                    (static_argument_list
                      (static_argument
                        (name_type_expr
                          (selector
                            (identifier_expr
                              (identifier))))))))
                (call_argument
                  (value_member_expr
                    (selector
                      (identifier_expr
                        (identifier))))))))))
      (single_line_comment)
      (stmt
        (for_stmt
          (binding_decl
            (binding_pattern
              (binding_introducer)
              (identifier)
              (name_type_expr
                (selector
                  (identifier_expr
                    (identifier))))))
          (value_member_expr
            (selector
              (identifier_expr
                (identifier))))
          (infix_expr
            (value_member_expr
              (selector
                (identifier_expr
                  (identifier))))
            (infix_operator_tail
              (infix_operator)
              (integer_literal
                (decimal_literal))))
          (brace_stmt
            (stmt
              (function_call_expr
                (value_member_expr
                  (selector
                    (identifier_expr
                      (identifier))
                    (static_argument_list
                      (static_argument
                        (name_type_expr
                          (selector
                            (identifier_expr
                              (identifier))))))))
                (call_argument
                  (value_member_expr
                    (selector
                      (identifier_expr
                        (identifier))))))))))
      (single_line_comment)
      (stmt
        (for_stmt
          (binding_decl
            (binding_pattern
              (binding_introducer)
              (identifier)))
          (function_call_expr
            (value_member_expr
              (selector
                (identifier_expr
                  (identifier))))
            (call_argument
              (identifier)
              (integer_literal
                (decimal_literal))))
          (brace_stmt
            (stmt
              (function_call_expr
                (value_member_expr
                  (selector
                    (identifier_expr
                      (identifier))
                    (static_argument_list
                      (static_argument
                        (name_type_expr
                          (selector
                            (identifier_expr
                              (identifier))))))))
                (call_argument
                  (value_member_expr
                    (selector
                      (identifier_expr
                        (identifier))))))))))
      (single_line_comment)
      (stmt
        (for_stmt
          (binding_decl
            (receiver_modifier)
            (binding_pattern
              (binding_introducer)
              (wildcard_pattern)))
          (function_call_expr
            (value_member_expr
              (selector
                (identifier_expr
                  (identifier))))
            (call_argument
              (identifier)
              (integer_literal
                (decimal_literal))))
          (brace_stmt)))
      (single_line_comment)
      (stmt
        (for_stmt
          (binding_decl
            (binding_pattern
              (binding_introducer)
              (wildcard_pattern)))
          (boolean_literal)
          (brace_stmt)))
      (single_line_comment)
      (stmt
        (for_stmt
          (binding_decl
            (receiver_modifier)
            (binding_pattern
              (binding_introducer)
              (wildcard_pattern)))
          (value_member_expr
            (selector
              (identifier_expr
                (identifier))))
          (brace_stmt)))
      (single_line_comment)
      (stmt
        (for_stmt
          (binding_decl
            (binding_pattern
              (binding_introducer)
              (wildcard_pattern)))
          (value_member_expr
            (selector
              (identifier_expr
                (identifier))))
          (tuple_expr)
          (brace_stmt))))))
